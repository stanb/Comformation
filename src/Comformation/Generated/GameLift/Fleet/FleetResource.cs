using System;
using System.Collections.Generic;
using Comformation.IntrinsicFunctions;

namespace Comformation.GameLift.Fleet
{
    /// <summary>
    /// AWS::GameLift::Fleet
    /// The AWS::GameLift::Fleet resource creates an Amazon GameLift (GameLift) fleet to host game servers. A fleet is
    /// a set of EC2 instances, each of which is a host in the fleet. For more information, see the CreateFleet action
    /// in the Amazon GameLift API Reference.
    /// https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html
    /// </summary>
    public class FleetResource : ResourceBase
    {
        public class FleetProperties
        {
            /// <summary>
            /// BuildId
            /// The unique identifier for the build that you want to use with this fleet.
            /// Required: Yes
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
			public Union<string, IntrinsicFunction> BuildId { get; set; }

            /// <summary>
            /// Description
            /// Information that helps you identify the purpose of this fleet.
            /// Required: No
            /// Type: String
            /// Update requires: No interruption
            /// </summary>
			public Union<string, IntrinsicFunction> Description { get; set; }

            /// <summary>
            /// DesiredEC2Instances
            /// The number of EC2 instances that you want in this fleet.
            /// Required: Yes
            /// Type: Integer
            /// Update requires: No interruption
            /// </summary>
			public Union<int, IntrinsicFunction> DesiredEC2Instances { get; set; }

            /// <summary>
            /// EC2InboundPermissions
            /// The incoming traffic, expressed as IP ranges and port numbers, that is permitted to access the game
            /// server. If you don't specify values, no traffic is permitted to your game servers.
            /// Required: No
            /// Type: List of Amazon GameLift Fleet EC2InboundPermission
            /// Update requires: No interruption
            /// </summary>
			public Union<List<IpPermission>, IntrinsicFunction> EC2InboundPermissions { get; set; }

            /// <summary>
            /// EC2InstanceType
            /// The type of EC2 instances that the fleet uses. EC2 instance types define the CPU, memory, storage,
            /// and networking capacity of the fleet's hosts. For more information about the instance types that are
            /// supported by GameLift, see the EC2InstanceType parameter in the Amazon GameLift API Reference.
            /// Required: Yes
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
			public Union<string, IntrinsicFunction> EC2InstanceType { get; set; }

            /// <summary>
            /// LogPaths
            /// The path to game-session log files that are generated by your game server, with the slashes (\)
            /// escaped. After a game session has been terminated, GameLift captures and stores the logs in an S3
            /// bucket.
            /// Required: No
            /// Type: List of String values
            /// Update requires: Replacement
            /// </summary>
			public Union<List<string>, IntrinsicFunction> LogPaths { get; set; }

            /// <summary>
            /// MaxSize
            /// The maximum number of EC2 instances that you want to allow in this fleet. By default, AWS
            /// CloudFormation, sets this property to 1.
            /// Required: No
            /// Type: Integer
            /// Update requires: No interruption
            /// </summary>
			public Union<int, IntrinsicFunction> MaxSize { get; set; }

            /// <summary>
            /// MinSize
            /// The minimum number of EC2 instances that you want to allow in this fleet. By default, AWS
            /// CloudFormation, sets this property to 0.
            /// Required: No
            /// Type: Integer
            /// Update requires: No interruption
            /// </summary>
			public Union<int, IntrinsicFunction> MinSize { get; set; }

            /// <summary>
            /// Name
            /// An identifier to associate with this fleet. Fleet names don't need to be unique.
            /// Required: Yes
            /// Type: String
            /// Update requires: No interruption
            /// </summary>
			public Union<string, IntrinsicFunction> Name { get; set; }

            /// <summary>
            /// ServerLaunchParameters
            /// The parameters that are required to launch your game server. Specify these parameters as a string of
            /// command-line parameters, such as +sv_port 33435 +start_lobby.
            /// Required: No
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
			public Union<string, IntrinsicFunction> ServerLaunchParameters { get; set; }

            /// <summary>
            /// ServerLaunchPath
            /// The location of your game server that GameLift launches. You must escape the slashes (\) and use the
            /// following pattern: C:\\game\\launchpath. For example, if your game server files are in the MyGame
            /// folder, the path should be C:\\game\\MyGame\\server. exe.
            /// Required: Yes
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
			public Union<string, IntrinsicFunction> ServerLaunchPath { get; set; }

        }
    
        public string Type { get; } = "AWS::GameLift::Fleet";
        
        public FleetProperties Properties { get; } = new FleetProperties();
    }
}
