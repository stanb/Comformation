using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Comformation.IntrinsicFunctions;

namespace Comformation.DataBrew.Job
{
    /// <summary>
    /// AWS::DataBrew::Job DataCatalogOutput
    /// https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-job-datacatalogoutput.html
    /// </summary>
    public class DataCatalogOutput
    {

        /// <summary>
        /// CatalogId
        /// The unique identifier of the AWS account that holds the Data Catalog that stores the data.
        /// Required: No
        /// Type: String
        /// Minimum: 1
        /// Maximum: 255
        /// Update requires: No interruption
        /// </summary>
        [JsonProperty("CatalogId")]
        public Union<string, IntrinsicFunction> CatalogId { get; set; }

        /// <summary>
        /// DatabaseName
        /// The name of a database in the Data Catalog.
        /// Required: Yes
        /// Type: String
        /// Minimum: 1
        /// Maximum: 255
        /// Update requires: No interruption
        /// </summary>
        [JsonProperty("DatabaseName")]
        public Union<string, IntrinsicFunction> DatabaseName { get; set; }

        /// <summary>
        /// TableName
        /// The name of a table in the Data Catalog.
        /// Required: Yes
        /// Type: String
        /// Minimum: 1
        /// Maximum: 255
        /// Update requires: No interruption
        /// </summary>
        [JsonProperty("TableName")]
        public Union<string, IntrinsicFunction> TableName { get; set; }

        /// <summary>
        /// S3Options
        /// Represents options that specify how and where DataBrew writes the Amazon S3 output generated by
        /// recipe jobs.
        /// Required: No
        /// Type: S3TableOutputOptions
        /// Update requires: No interruption
        /// </summary>
        [JsonProperty("S3Options")]
        public S3TableOutputOptions S3Options { get; set; }

        /// <summary>
        /// DatabaseOptions
        /// Represents options that specify how and where DataBrew writes the database output generated by
        /// recipe jobs.
        /// Required: No
        /// Type: DatabaseTableOutputOptions
        /// Update requires: No interruption
        /// </summary>
        [JsonProperty("DatabaseOptions")]
        public DatabaseTableOutputOptions DatabaseOptions { get; set; }

        /// <summary>
        /// Overwrite
        /// A value that, if true, means that any data in the location specified for output is overwritten with
        /// new output. Not supported with DatabaseOptions.
        /// Required: No
        /// Type: Boolean
        /// Update requires: No interruption
        /// </summary>
        [JsonProperty("Overwrite")]
        public Union<bool, IntrinsicFunction> Overwrite { get; set; }

    }
}
