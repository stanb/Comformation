using System;
using System.Collections.Generic;
using Comformation.IntrinsicFunctions;

namespace Comformation.EC2.VPCEndpoint
{
    /// <summary>
    /// AWS::EC2::VPCEndpoint
    /// https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
    /// </summary>
    public class VPCEndpointResource : ResourceBase
    {
        public class VPCEndpointProperties
        {
            /// <summary>
            /// PolicyDocument
            /// (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the
            /// service. If this parameter is not specified, we attach a default policy that allows full access to
            /// the service.
            /// For CloudFormation templates in YAML, you can provide the policy in JSON or YAML format. AWS
            /// CloudFormation converts YAML policies to JSON format before calling the API to create or modify the
            /// VPC endpoint.
            /// Required: No
            /// Type: Json
            /// Update requires: No interruption
            /// </summary>
            public Union<Newtonsoft.Json.Linq.JToken, IntrinsicFunction> PolicyDocument { get; set; }

            /// <summary>
            /// PrivateDnsEnabled
            /// (Interface endpoint) Indicate whether to associate a private hosted zone with the specified VPC. The
            /// private hosted zone contains a record set for the default public DNS name for the service for the
            /// Region (for example, kinesis. us-east-1. amazonaws. com) which resolves to the private IP addresses
            /// of the endpoint network interfaces in the VPC. This enables you to make requests to the default
            /// public DNS name for the service instead of the public DNS names that are automatically generated by
            /// the VPC endpoint service.
            /// To use a private hosted zone, you must set the following VPC attributes to true: enableDnsHostnames
            /// and enableDnsSupport.
            /// Default: false
            /// Required: No
            /// Type: Boolean
            /// Update requires: No interruption
            /// </summary>
            public Union<bool, IntrinsicFunction> PrivateDnsEnabled { get; set; }

            /// <summary>
            /// RouteTableIds
            /// (Gateway endpoint) One or more route table IDs.
            /// Required: No
            /// Type: List of String
            /// Update requires: No interruption
            /// </summary>
            public List<Union<string, IntrinsicFunction>> RouteTableIds { get; set; }

            /// <summary>
            /// SecurityGroupIds
            /// (Interface endpoint) The ID of one or more security groups to associate with the endpoint network
            /// interface.
            /// Required: No
            /// Type: List of String
            /// Update requires: No interruption
            /// </summary>
            public List<Union<string, IntrinsicFunction>> SecurityGroupIds { get; set; }

            /// <summary>
            /// ServiceName
            /// The service name. To get a list of available services, use the DescribeVpcEndpointServices request,
            /// or get the name from the service provider.
            /// Required: Yes
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
            public Union<string, IntrinsicFunction> ServiceName { get; set; }

            /// <summary>
            /// SubnetIds
            /// (Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an
            /// endpoint network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.
            /// Required: Conditional
            /// Type: List of String
            /// Update requires: No interruption
            /// </summary>
            public List<Union<string, IntrinsicFunction>> SubnetIds { get; set; }

            /// <summary>
            /// VpcEndpointType
            /// The type of endpoint.
            /// Default: Gateway
            /// Required: No
            /// Type: String
            /// Allowed values: Gateway | GatewayLoadBalancer | Interface
            /// Update requires: Replacement
            /// </summary>
            public Union<string, IntrinsicFunction> VpcEndpointType { get; set; }

            /// <summary>
            /// VpcId
            /// The ID of the VPC in which the endpoint will be used.
            /// Required: Yes
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
            public Union<string, IntrinsicFunction> VpcId { get; set; }

        }

        public string Type { get; } = "AWS::EC2::VPCEndpoint";

        public VPCEndpointProperties Properties { get; } = new VPCEndpointProperties();

    }

    public static class VPCEndpointAttributes
    {
        public static readonly ResourceAttribute<Union<string, IntrinsicFunction>> CreationTimestamp = new ResourceAttribute<Union<string, IntrinsicFunction>>("CreationTimestamp");
        public static readonly ResourceAttribute<List<Union<string, IntrinsicFunction>>> DnsEntries = new ResourceAttribute<List<Union<string, IntrinsicFunction>>>("DnsEntries");
        public static readonly ResourceAttribute<List<Union<string, IntrinsicFunction>>> NetworkInterfaceIds = new ResourceAttribute<List<Union<string, IntrinsicFunction>>>("NetworkInterfaceIds");
    }
}
