using System;
using System.Collections.Generic;
using Comformation.IntrinsicFunctions;

namespace Comformation.RDS.EventSubscription
{
    /// <summary>
    /// AWS::RDS::EventSubscription
    /// The AWS::RDS::EventSubscription resource allows you to receive notifications for Amazon Relational Database
    /// Service events through the Amazon Simple Notification Service (Amazon SNS). For more information, see Using
    /// Amazon RDS Event Notification in the Amazon RDS User Guide.
    /// https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-eventsubscription.html
    /// </summary>
    public class EventSubscriptionResource : ResourceBase
    {
        public class EventSubscriptionProperties
        {
            /// <summary>
            /// Enabled
            /// A Boolean value; set to true to activate the subscription, set to false to create the subscription
            /// but not active it.
            /// Required: No
            /// Type: Boolean
            /// Update requires: No interruption
            /// </summary>
			public Union<bool, IntrinsicFunction> Enabled { get; set; }

            /// <summary>
            /// EventCategories
            /// A list of event categories for a SourceType that you want to subscribe to. You can see a list of the
            /// categories for a given SourceType in the Events topic in the Amazon RDS User Guide or by using the
            /// DescribeEventCategories action.
            /// Required: No
            /// Type: List of String
            /// Update requires: No interruption
            /// </summary>
			public List<Union<string, IntrinsicFunction>> EventCategories { get; set; }

            /// <summary>
            /// SnsTopicArn
            /// The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created
            /// by Amazon SNS when you create a topic and subscribe to it.
            /// Required: Yes
            /// Type: String
            /// Update requires: Replacement
            /// </summary>
			public Union<string, IntrinsicFunction> SnsTopicArn { get; set; }

            /// <summary>
            /// SourceIds
            /// The list of identifiers of the event sources for which events will be returned. If not specified,
            /// then all sources are included in the response. An identifier must begin with a letter and must
            /// contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two
            /// consecutive hyphens.
            /// Constraints:
            /// If SourceIds are supplied, SourceType must also be provided. If the source type is a DB instance,
            /// then a DBInstanceIdentifier must be supplied. If the source type is a DB security group, a
            /// DBSecurityGroupName must be supplied. If the source type is a DB parameter group, a
            /// DBParameterGroupName must be supplied. If the source type is a DB Snapshot, a DBSnapshotIdentifier
            /// must be supplied.
            /// Required: No
            /// Type: List of String
            /// Update requires: No interruption
            /// </summary>
			public List<Union<string, IntrinsicFunction>> SourceIds { get; set; }

            /// <summary>
            /// SourceType
            /// The type of source that will be generating the events. For example, if you want to be notified of
            /// events generated by a DB instance, you would set this parameter to db-instance. if this value is not
            /// specified, all events are returned.
            /// Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot
            /// Required: No
            /// Type: String
            /// Update requires: Some interruptions
            /// </summary>
			public Union<string, IntrinsicFunction> SourceType { get; set; }

        }

        public string Type { get; } = "AWS::RDS::EventSubscription";

        public EventSubscriptionProperties Properties { get; } = new EventSubscriptionProperties();

    }
}
